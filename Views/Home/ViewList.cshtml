@model List<AppDev.Models.MediaItem>

@{
    ViewData["Title"] = "TRACKXD";
    string currentSort = ViewData["CurrentSort"]?.ToString() ?? "Default";
}

<div class="container mt-4">
    <h1 class="text-center" style="color: #5D8736;">TRACKXD</h1>

    @if (TempData["Message"] != null)
    {
        <div class="alert alert-success" role="alert" style="background-color: #C8E6C9; color: #2E7D32; border-color: #388E3C;">
            @TempData["Message"]
        </div>
    }

    <!-- Sorting Dropdown -->
    <div class="mb-3 d-flex justify-content-center align-items-center">
        <form method="get" asp-action="ViewList" class="d-flex align-items-center gap-2">
            <label for="sortBy" class="form-label mb-0" style="color: #5D8736;">Sort By:</label>
            <select id="sortBy" name="sortBy" class="form-select w-auto" style="border-color: #8A9C76;">
                <option value="Default" selected="@((currentSort == "Default") ? "selected" : null)">Default</option>
                <option value="Year" selected="@((currentSort == "Year") ? "selected" : null)">Year Finished</option>
                <option value="Rating" selected="@((currentSort == "Rating") ? "selected" : null)">Rating</option>
                <option value="Title" selected="@((currentSort == "Title") ? "selected" : null)">Title</option>
                <option value="Class" selected="@((currentSort == "Class") ? "selected" : null)">Class</option>
            </select>
            <button type="submit" class="btn btn-primary" style="background-color: #5D8736; border-color: #5D8736;">Sort</button>
        </form>
    </div>

    @if (!Model.Any())
    {
        <p class="text-center mt-4" style="color: #5D8736;">No media items added yet.</p>
    }
    else
    {
        <div class="table-responsive" style="max-width: 100%; overflow-x: hidden;">
            <table class="table table-striped table-hover" style="width: 100%;">
                <thead class="thead-light">
                    <tr>
                        <th style="padding: 12px; text-align: center; width: 10%;">Class</th>
                        <th style="padding: 12px; text-align: center; width: 20%;">Title</th>
                        <th style="padding: 12px; text-align: center; width: 10%;">Season</th>
                        <th style="padding: 12px; text-align: center; width: 10%;">Year Finished</th>
                        <th style="padding: 12px; text-align: center; width: 10%;">Rating</th>
                        <th style="padding: 12px; text-align: center; width: 25%;">Review</th>
                        <th style="padding: 12px; text-align: center; width: 15%;">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr class="table-row">
                            <td style="padding: 12px; text-align: center;">
                                <div style="display: flex; align-items: center; justify-content: center; gap: 8px;">
                                    @if (item.Class == "Movie")
                                    {
                                        <span>ðŸŽ¥</span>
                                        <span>Movie</span>
                                    }
                                    else if (item.Class == "Show")
                                    {
                                        <span>ðŸ“º</span>
                                        <span>Show</span>
                                    }
                                    else if (item.Class == "Book")
                                    {
                                        <span>ðŸ“š</span>
                                        <span>Book</span>
                                    }
                                </div>
                            </td>
                            <td style="padding: 12px; text-align: center;">@item.Title</td>
                            <td style="padding: 12px; text-align: center;">@(item.Class == "Show" ? item.Season?.ToString() ?? "N/A" : "N/A")</td>
                            <td style="padding: 12px; text-align: center;">@item.YearFinished</td>
                            <td style="padding: 12px; text-align: center;">
                                <div style="white-space: nowrap;">
                                    @for (int i = 0; i < item.Rating; i++)
                                    {
                                        <span class="text-warning">â˜…</span>
                                    }
                                    @for (int i = item.Rating; i < 5; i++)
                                    {
                                        <span class="text-secondary">â˜…</span>
                                    }
                                </div>
                            </td>
                            <td style="padding: 12px; text-align: center;">@(!string.IsNullOrEmpty(item.Review) ? item.Review : "No review provided.")</td>
                            <td style="padding: 12px; text-align: center;">
                                <div class="d-block gap-2 justify-content-center">
                                    <a href="/TRACKXD/Edit/@item.Id" class="btn btn-warning btn-sm mb-2">Edit</a>
                                    <form asp-action="Delete" asp-route-id="@item.Id" method="post" class="d-inline">
                                        <button type="button" class="btn btn-danger btn-sm"
                                                onclick="return confirmDelete('@item.Title', this.form);">
                                            Delete
                                        </button>
                                    </form>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteConfirmationModal" tabindex="-1" aria-labelledby="deleteConfirmationLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteConfirmationLabel">TRACKXD</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this file?</p>
                <p id="deleteItemTitle" style="font-weight: bold;"></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteButton">Delete</button>
            </div>
        </div>
    </div>
</div>

<script>
    let deleteForm;

    function confirmDelete(itemTitle, formElement) {
        document.getElementById('deleteItemTitle').textContent = "Title: " + itemTitle;
        deleteForm = formElement;

        const deleteModal = new bootstrap.Modal(document.getElementById('deleteConfirmationModal'));
        deleteModal.show();
        return false;
    }

    document.getElementById('confirmDeleteButton').addEventListener('click', function () {
        if (deleteForm) {
            deleteForm.submit();
        }
    });
</script>

<style>
    /* Light Mode Styles */
    body {
        font-family: 'Open Sans', Arial, sans-serif;
        background-color: #F0F0D7;
        color: #4A5A6B;
    }

    h1.text-center {
        color: #5D8736;
    }

    .alert-success {
        background-color: #C8E6C9;
        color: #2E7D32;
        border-color: #388E3C;
    }

    .table {
        background-color: #E8F5E9;
        color: #2E7D32;
    }

    .table-row:hover {
        background-color: #C8E6C9;
    }

    .btn-primary {
        background-color: #5D8736;
        border-color: #5D8736;
    }

    .btn-danger {
        background-color: #dc3545;
        border-color: #dc3545;
    }

    .btn-warning {
        background-color: #ffc107;
        border-color: #ffc107;
    }

    /* Dark Mode Styles */
    body[data-theme="dark"] {
        background-color: #243642;
        color: #FFFFFF;
    }

        body[data-theme="dark"] .alert-success {
            background-color: #3E5C5F;
            color: #A5D6A7;
            border-color: #66BB6A;
        }

        body[data-theme="dark"] .table {
            background-color: #2C5C5F;
            color: #A5D6A7;
        }

            body[data-theme="dark"] .table th,
            body[data-theme="dark"] .table td {
                color: #A5D6A7;
            }

        body[data-theme="dark"] .table-row:hover {
            background-color: #3E5C5F;
        }

        body[data-theme="dark"] .modal-content {
            background-color: #2C3E50;
            color: #FFFFFF;
        }

        body[data-theme="dark"] .modal-header {
            border-bottom: 1px solid #34495E;
        }

        body[data-theme="dark"] .modal-footer {
            border-top: 1px solid #34495E;
        }

        body[data-theme="dark"] .btn-close {
            filter: invert(1);
        }

        body[data-theme="dark"] #deleteItemTitle {
            color: #A5D6A7;
        }
</style>