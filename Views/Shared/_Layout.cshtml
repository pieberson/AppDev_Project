<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Trackxd</title>

    <!-- Favicon -->
    <link rel="icon" type="image/png" href="~/TRACKXDLOGO.png" />

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.1.3/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" />
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" />
    <style>
        /* Light mode color scheme */
        :root {
            --primary-color: #1a1a1a;
            --secondary-color: #ff5a5f;
            --background-color: #f8f9fa;
            --card-background: #ffffff;
            --border-color: #e0e0e0;
            --hover-color: #ff7e82;
        }

        /* Dark mode color scheme */
        [data-theme="dark"] {
            --primary-color: #ffffff;
            --secondary-color: #ff5a5f;
            --background-color: #2c2f3b;
            --card-background: #3a434f;
            --border-color: #4A5A6B;
            --hover-color: #ff7e82;
        }

        body {
            background-color: var(--background-color);
            font-family: 'Inter', sans-serif;
            color: var(--primary-color);
            line-height: 1.6;
            display: flex;
            flex-direction: column;
            min-height: 100vh;
            transition: background-color 0.3s ease, color 0.3s ease;
        }

        /* Navbar styling */
        .navbar {
            background-color: var(--card-background);
            border-bottom: 1px solid var(--border-color);
        }

        .navbar-brand {
            color: var(--primary-color) !important;
            font-weight: 700;
        }

        .navbar-nav .nav-link {
            color: var(--primary-color) !important;
            font-weight: 500;
        }

            .navbar-nav .nav-link:hover {
                color: var(--secondary-color) !important;
            }

        /* Container styling */
        .container {
            background-color: var(--card-background);
            border-radius: 12px;
            padding: 30px;
            margin-top: 20px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
            flex: 1;
        }

        /* Card styling */
        .card {
            background-color: var(--card-background);
            border: 1px solid var(--border-color);
            border-radius: 12px;
        }

            .card:hover {
                transform: translateY(-5px);
                box-shadow: 0 8px 16px rgba(0, 0, 0, 0.15);
            }

        .card-header {
            background-color: var(--card-background);
            border-bottom: 1px solid var(--border-color);
        }

        .card-title {
            color: var(--primary-color);
            font-size: 1.25rem;
            font-weight: 700;
        }

        /* Button styling */
        .btn-primary {
            background-color: var(--secondary-color);
            border-color: var(--secondary-color);
            font-weight: 600;
            border-radius: 25px;
            padding: 10px 20px;
        }

            .btn-primary:hover {
                background-color: var(--hover-color);
                border-color: var(--hover-color);
            }

        /* Footer styling */
        .footer {
            background-color: transparent;
            color: var(--primary-color);
            padding: 20px 0;
            text-align: center;
            margin-top: auto;
            font-size: 0.9rem;
            opacity: 0.8;
        }

            .footer a {
                color: var(--secondary-color);
                font-weight: 500;
            }

                .footer a:hover {
                    color: var(--hover-color);
                }

        /* Dark mode toggle button */
        .theme-toggle {
            background: none;
            border: none;
            color: var(--primary-color);
            cursor: pointer;
            font-size: 1.2rem;
        }

            .theme-toggle:hover {
                color: var(--secondary-color);
            }
    </style>
</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-light">
        <div class="container-fluid">
            <a class="navbar-brand" href="/TRACKXD/AboutUs">TRACKXD</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav ms-auto">
                    <li class="nav-item">
                        <a class="nav-link" href="/TRACKXD/Home">Home</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/TRACKXD/ViewList">View List</a>
                    </li>
                    <li class="nav-item">
                        <button class="theme-toggle" id="themeToggle">
                            🌓
                        </button>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <div class="container mt-4">
        @RenderBody()
    </div>

    <footer class="footer">
        <p>BSCS 3-2: Application Development</p>
    </footer>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.1.3/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js"></script>
    <script>
        // Dark mode toggle functionality
        const themeToggle = document.getElementById('themeToggle');
        const body = document.body;

        // Check for saved theme in localStorage
        const savedTheme = localStorage.getItem('theme');
        if (savedTheme) {
            body.setAttribute('data-theme', savedTheme);
            themeToggle.textContent = savedTheme === 'dark' ? '🌞' : '🌓';
        }

        // Toggle theme on button click
        themeToggle.addEventListener('click', () => {
            const isDark = body.getAttribute('data-theme') === 'dark';
            body.setAttribute('data-theme', isDark ? 'light' : 'dark');
            themeToggle.textContent = isDark ? '🌓' : '🌞';
            localStorage.setItem('theme', isDark ? 'light' : 'dark');
        });
    </script>
</body>
</html>
